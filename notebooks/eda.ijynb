### Analyzing the car sales data

#importing libraries
import pandas as pd
import numpy as nb
from matplotlib import pyplot as plt
import seaborn as sns
import streamlit as st
import plotly.express as px
import altair as alt


# reading csv
data= pd.read_csv('/Users/vandanamalik/Documents/TripleTen/Car-Sales-Data-Analysis/vehicles_us.csv')
data.head(1)

#exploring the data
data.info()
data.describe()

# identify duplicates
data.duplicated().sum()

# identify missing values
data.isna().sum()

#unique values in the columns
data['model_year'].unique()
data['condition'].unique()
data['cylinders'].unique()
data['is_4wd'].unique()

#data in column is_4wd is either 1 or missing. Assuming 1 means True and missing means False, filling the missing with 0 will eliminate the missing values in this column.

#filling missing values with unkown for is_4wd and paint_color
data['is_4wd'] = data['is_4wd'].fillna('0')
data['paint_color'] = data['paint_color'].fillna('unknown')

#deleting missing values for the other columns
data.dropna(inplace=True)

change datatype 
data['model_year'] = data['model_year'].astype(int)
data['cylinders'] = data['cylinders'].astype(int)
data['date_posted'] = pd.to_datetime(data['date_posted'], format='%Y-%m-%d')


# extract car company name from the model information
data['car_company'] = data['model'].str.split(' ').str[0]
data.head()

# counts by car company names
car_company_counts= data['car_company'].value_counts()
car_company_counts


# creating a list of numeric features and calculating correlation between numeric features
numeric_features = []
for x in data.columns:
    if data[x].dtype != '0':
        numeric_features.append(x)
data[numeric_features].corr()

#Visulaizing correlation using heatmap
numeric_features_df = data[numeric_features]
plt.figure(figsize=(10,6))
sns.heatmap(numeric_features_df.corr(), cmap='CMRmap', annot=True)

plt.show()

# Visulaizing the data
# price distribution
sns.histplot(data['price'], bins=30)

